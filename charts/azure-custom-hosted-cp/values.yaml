# Cluster parameters
controlPlaneNumber: 3
workersNumber: 2

clusterNetwork:
  pods:
    cidrBlocks:
    - "10.244.0.0/16"
  services:
    cidrBlocks:
    - "10.96.0.0/12"

clusterLabels: {}
clusterAnnotations: {}

# Azure cluster parameters
location: ""
subscriptionID: ""
bastion:
  enabled: false
  bastionSpec:
    azureBastion: {}
clusterIdentity:
  name: ""
  namespace: kcm-system
resourceGroup: ""
network:
  vnetName: ""
  nodeSubnetName: ""
  routeTableName: ""
  securityGroupName: ""
# Azure machines parameters

sshPublicKey: ""
vmSize: ""
rootVolumeSize: 30
image:
  id: ""
  computeGallery: {}
  marketplace:
    publisher: "cncf-upstream"
    offer: "capi"
    sku: "ubuntu-2204-gen1"
    version: "130.3.20240717"

# K0smotron parameters
k0smotron: # @schema description: K0smotron parameters; type: object
  controllerPlaneFlags: [] # @schema description: ControlPlaneFlags allows to configure additional flags for k0s control plane and to override existing ones. The default flags are kept unless they are overriden explicitly. Flags with arguments must be specified as a single string, e.g. --some-flag=argument; type: array; item: string; uniqueItems: true
  service: # @schema description: The API service configuration; type: object
    type: LoadBalancer # @schema description: An ingress methods for a service; type: string; enum: ClusterIP, NodePort, LoadBalancer; default: LoadBalancer
    apiPort: 6443 # @schema description: The kubernetes API port. If empty k0smotron will pick it automatically; type: number; minimum: 1; maximum: 65535
    konnectivityPort: 8132 # @schema description: The konnectivity port. If empty k0smotron will pick it automatically; type: number; minimum: 1; maximum: 65535

# K0s parameters
k0s: # @schema description: K0s parameters; type: object
  version: v1.32.6+k0s.0 # @schema description: K0s version; type: string
  arch: amd64 # @schema description: K0s Download URL Arch; type: string; enum: amd64, arm64, arm; default: amd64
  workerArgs: [] # @schema description: Args specifies extra arguments to be passed to k0s worker. See: https://docs.k0sproject.io/stable/worker-node-config/ See: https://docs.k0sproject.io/stable/cli/k0s_worker/; type: array; item: string; uniqueItems: true
  api: # @schema description: Kubernetes API server parameters; type: object
    extraArgs: {} # @schema description: Map of key-values (strings) for any extra arguments to pass down to Kubernetes api-server process; type: object; additionalProperties: true
