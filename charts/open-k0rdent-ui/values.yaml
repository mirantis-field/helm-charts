# Default values for open-k0rdent-ui
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/mirantis-field/open-k0rdent-ui
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000
  targetPort: 3000
  name: http

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: k0rdent-ui.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Application specific configuration
app:
  env:
    NODE_ENV: "production"
    HOSTNAME: "0.0.0.0"
    # KUBERNETES_SERVICE_PORT will be set automatically to "6443"

# Namespace configuration
namespace:
  create: true
  name: "open-k0rdent-ui"
  labels:
    name: "open-k0rdent-ui"

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true
  # Cluster-wide permissions for k0rdent resources
  clusterRole:
    # Additional custom rules can be added here
    customRules: []

# Health checks
probes:
  readiness:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
  liveness:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15
    periodSeconds: 20 